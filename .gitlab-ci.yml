stages:
  - test
  - scan
  - docs
  - build
  - publish

cache:
  paths:
    - node_modules/

docs:
  allow_failure: true
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/node:latest
  tags:
    - docker
  stage: docs
  only:
    - tags
    - /^v(\d+\.)?(\d+\.)?(\*|\d+)$/
  except:
    - branches
  script:
    - npm install
    - npm run makeDocs
  artifacts:
    paths:
      - "docs"
    expire_in: 30 days

# PROD BUIDL


lint:scan:prod:
  allow_failure: false
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/node:latest
  tags:
    - docker
  stage: scan
  only:
    - tags
    - /^v(\d+\.)?(\d+\.)?(\*|\d+)$/
  except:
    - branches
  script:
    - npm install
    - npm run lint
  needs: []

'sonar:scan:prod':
  allow_failure: true
  image: sonarsource/sonar-scanner-cli
  stage: scan
  tags:
    - docker
  only:
    - tags
    - /^v(\d+\.)?(\d+\.)?(\*|\d+)$/
  script:
    - sonar-scanner -Dsonar.login=$sonar_key -Dsonar.host.url=$sonar_url


sec:scan:prod:
  before_script:
    - cp $TESTENVFILE .env
  image: registry.gitlab.com/gitlab-org/security-products/analyzers/eslint
  tags:
    - docker
  stage: scan
  only:
    - tags
    - /^v(\d+\.)?(\d+\.)?(\*|\d+)$/
  except:
    - branches
  script:
    - /analyzer run
  artifacts:
    when: always
    reports:
      sast: gl-sast-report.json


make:build:prod:
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/node:latest
  tags:
    - docker
  stage: build
  only:
    - tags
    - /^v(\d+\.)?(\d+\.)?(\*|\d+)$/
  except:
    - branches
  script:
    - npm install
    - npm run buildprep
  needs:
    - lint:scan:prod
    - sec:scan:prod
    - sonar:scan:prod
  artifacts:
    paths:
      - dist
    expire_in: 7 days


package:peploy:prod:
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/node:latest
  tags:
    - docker
  stage: publish
  only:
    - tags
    - /^v(\d+\.)?(\d+\.)?(\*|\d+)$/
  except:
    - branches
  before_script:
    - cp $NPM_DEPLOY ./.npmrc
  after_script:
    - rm ./.npmrc
  script:
    - npm publish
    - npm pack
  needs:
    - make:build:prod
  artifacts:
    paths:
      - ./*.tgz


lint:scan:dev:
  allow_failure: true
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/node:latest
  tags:
    - docker
  stage: scan
  only:
    - merge_requests
    - dev
    - master
  script:
    - npm install
    - npm run lint


sec:scan:dev:
  before_script:
    - cp $TESTENVFILE .env
  image: registry.gitlab.com/gitlab-org/security-products/analyzers/eslint
  tags:
    - docker
  stage: scan
  only:
    - merge_requests
    - dev
    - master
  script:
    - /analyzer run
  artifacts:
    when: always
    reports:
      sast: gl-sast-report.json

make:build:dev:
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/node:latest
  tags:
    - docker
  stage: build
  only:
    - merge_requests
    - dev
    - master
  script:
    - npm install
    - npm run buildprep
    - npm pack
  artifacts:
    paths:
      - ./*.tgz
    expire_in: 14 days
